{"id":"shaders/first/vertex.glsl","dependencies":[{"name":"/home/kali/Desktop/ZENIT.D.A/package.json","includedInParent":true,"mtime":1618447018788}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nuniform float time;\\nuniform float direction;\\nuniform float progress;\\nvarying vec2 vUv;\\nvarying vec4 vPosition;\\nuniform vec2 pixels;\\n\\nvoid main(){\\n    vec3 pos = position;\\n    //pos.z = 0.1 * sin(pos.x*10.);\\n    float distance = length(uv-vec2(0.5));\\n    float maxdist = length(vec2(0.5));\\n    float normalizedDistance = distance / maxdist;\\n    float stickTo = normalizedDistance;\\n    float stickOut = -normalizedDistance;\\n    float stickEffect = mix(stickTo,stickOut,direction);\\n    float superProgress =min(2.*progress,2.*(1.-progress));\\n    float zOffset = 2.;\\n    float zProgress = mix(clamp(2.*progress,0.,1.),clamp(1.-2.*(1.-progress),0.,1.),direction);\\n    pos.z += zOffset * (stickEffect * superProgress - zProgress);\\n    pos.z += progress*sin(distance*10.+ 2.*time)*0.1;\\n   \\n    vUv = uv;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.0);\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"shaders/first/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"shaders/first/vertex.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"shaders/first/vertex.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"shaders/first/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"shaders/first/vertex.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":930},"source":"shaders/first/vertex.glsl","original":{"line":1,"column":0}}],"sources":{"shaders/first/vertex.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform float time;\\nuniform float direction;\\nuniform float progress;\\nvarying vec2 vUv;\\nvarying vec4 vPosition;\\nuniform vec2 pixels;\\n\\nvoid main(){\\n    vec3 pos = position;\\n    //pos.z = 0.1 * sin(pos.x*10.);\\n    float distance = length(uv-vec2(0.5));\\n    float maxdist = length(vec2(0.5));\\n    float normalizedDistance = distance / maxdist;\\n    float stickTo = normalizedDistance;\\n    float stickOut = -normalizedDistance;\\n    float stickEffect = mix(stickTo,stickOut,direction);\\n    float superProgress =min(2.*progress,2.*(1.-progress));\\n    float zOffset = 2.;\\n    float zProgress = mix(clamp(2.*progress,0.,1.),clamp(1.-2.*(1.-progress),0.,1.),direction);\\n    pos.z += zOffset * (stickEffect * superProgress - zProgress);\\n    pos.z += progress*sin(distance*10.+ 2.*time)*0.1;\\n   \\n    vUv = uv;\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.0);\\n}\";"},"lineCount":null}},"error":null,"hash":"4ebee887432a02c334ba7abc503ac15f","cacheData":{"env":{}}}